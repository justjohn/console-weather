#!/usr/bin/env node
var options = {
		expanded: false,
		color: false,
		useFahrenheit: true
	},
	args = Array.prototype.slice.apply(process.argv),
	out = process.stdout,
	err = process.stderr,
	api_key    = process.env.WEATHER_API,

	// Dependencies
	API        = require('../src/api').API,
	utils      = require('../src/utils'),
	colorSpace = require('../conf/colors'),
	doc        = require('../conf/doc')
	ansiTrim   = require('cli-color/lib/trim'),

	api = new API(api_key);

// trim node and weather off
args.shift();
args.shift();

for (var i=0; i<args.length; i++) {
	arg = args[i];
	if (arg.trim() == "-f")
		options.expanded = true;

	if (arg.trim() == "--color")
		options.color = true;

	if (arg.trim() == "-c")
		options.useFahrenheit = false;

	if (arg.trim() == "--help")
	{
		doc.print(out, "USAGE");
		if (!api_key) doc.print(err, "API_KEY");
		return 1;
	}

}

if (!api_key) {
	doc.print(err, "API_KEY");
	return 1;
}

var color = colorSpace[options.color?'default':'none'];

api.geoforecast()
.then(function(data) {

	var weather      = data.current_observation,
		txt_forecast = data.forecast.txt_forecast.forecastday,
		forecast     = data.forecast.simpleforecast.forecastday,

		location   = color.loc(weather.observation_location.full),
		time       = color.dim(weather.observation_time),
		temp       = color.temp(weather.temperature_string),
		conditions = color.high(weather.weather),
		credits    = color.dim("Weather Underground");

	var segment,
		deg = options.useFahrenheit?"fahrenheit":"celsius",
		line_length = 80,
		forecast_length = 80,
		block_size = Math.floor(line_length / forecast.length),
		i,
		line_day = "",
		line_temp = "";

	if (block_size > 13)
		block_size = 13;

	for (i=0; i<forecast.length; i++) {
		segment = forecast[i];

		line_day += utils.pad(segment.date.weekday_short, block_size);
		line_temp += utils.pad(color.tempLow(segment.high[deg]) + " / "
								+ color.tempLow(segment.low[deg]), block_size);
	}

	var bar = color.bar(utils.repeat('-', line_length)),
		output = "\n"
			   + bar + "\n\n"
			   + utils.pad(location, line_length) + "\n\n"
			   + utils.pad(conditions + " :: " + temp, line_length) + "\n\n"
			   + utils.pad(line_day, line_length) + "\n"
			   + utils.pad(line_temp, line_length) + "\n";

	if (options.expanded) {
		output += "\n" + bar + "\n";
		for (i=0; i<txt_forecast.length; i++) {
			segment = txt_forecast[i];

			output += "\n" + color.fullDay(segment.title.toUpperCase()) + "\n"
					+ color.fullText(utils.wordAwareFormat(segment.fcttext, forecast_length));
		}
	}

	output += "\n" + bar + "\n"
		   + time + utils.repeat(' ', line_length - ansiTrim(credits).length
		   								 - ansiTrim(time).length) + credits + "\n";

	out.write(output);

})
.fail(function(error) {
	err.write(
		"Unable to access Weather Underground API.\n"
	 	+ error.type + ": " + error.description);
});

