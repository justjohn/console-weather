#!/usr/bin/env node

var http = require('http'),
	api_key = process.env.WEATHER_API,
	expanded = false,
	args = Array.prototype.slice.apply(process.argv);

// trim node and weather off
args.shift();
args.shift();

for (var i=0; i<args.length; i++) {
	arg = args[i];
	if (arg.trim() == "-f")
		expanded = true;
}


if (!api_key) {
	process.stderr.write(
		"No WEATHER_API environment variable present.\n\n" +
		"Please set the WEATHER_API environment variable to a key from:\n" +
		"http://api.wunderground.com/weather/api/\n\n"
		);
	return;
}

var api = function(path, callback) {

	var options = {
	  host: 'api.wunderground.com',
	  port: 80,
	  path: '/api/' + api_key + path,
	  method: 'GET'
	};

	var req = http.request(options, function(res) {
		var output = '';
		res.setEncoding('utf8');
		res.on('data', function (chunk) {
			output += chunk;
		});

		res.on('end', function (chunk) {
			var json = JSON.parse(output);
			callback && callback(json);
		});
	});

	req.on('error', function(e) {
	  	process.stderr.write('problem with request: ' + e.message);
	});

	req.end();
};


api('/geolookup/q/autoip.json', function(data) {
	if (!data.location) {
		var error = data.response.error;
		process.stderr.write("Unable to access Weather Underground API.\n" + error.type + ": " + error.description);
		return;
	}

	var zip = data.location.zip;

	api('/conditions/forecast/q/' + zip + '.json', function(data) {
		var weather  = data.current_observation,
			forecast = data.forecast.txt_forecast.forecastday,
			location = weather.observation_location.full,
			time     = weather.observation_time,
			temp     = weather.temperature_string,
			conditions = weather.weather;

		var output = "-------------------------------------------------------\n\n"
				   + location + "\n"
				   + time + "\n\n"
				   + conditions + " :: " + temp + "\n\n"
				   + "-------------------------------------------------------\n\n";

		if (expanded) {
			var segment;
			for (var i=0; i<forecast.length; i++) {
				segment = forecast[i];

				output += "# " + segment.title + "\n"
						+ segment.fcttext + "\n\n";
			}
		}

		process.stdout.write(output);
	});
});


